@import '~sass/mixins';

.host {

  display: block

}

:host-context(.datatable-header-cell-template-wrap) {
  span.checkmark {
    top: 40px;
  }
  .checkmark{
    border: 2px solid $base-light-blue!important;
  }
  .container input:checked ~ .checkmark {
    background-color: $base-light-blue!important;
  }
}


:host-context(.table-wrapper-validation){
  .container {
    display: inherit;
    height: inherit;
  }
}

div.chkBox{

  display: flex;
  justify-content: space-between;

  @include etl-font-regular($fontSize: 15px); 
  color: $base-dark-blue-black;

  .form-group:first-of-type {
      input[type=checkbox] { 
        position: relative;
        margin: 0 0.4em 0.4em 0;}
  }
  label {
    @include etl-font-regular($fontSize: 13px);
    line-height: 25px;
    color: $base-dark-blue-black;
  }
  // custom checkbox
  .container {
    display: flex;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    height: 71px;
    font-size: 13px;
    font-weight: 400;
    flex-direction: column;
    justify-content: center;
    @include etl-font-regular($fontSize: 13px);
  }


  /* Hide the browser's default checkbox */
  .container input {
    position: absolute;
     opacity: 0; 
     cursor: pointer;
    }

  /* Create a custom checkbox */
  .checkmark {
    position: absolute; 
    left: 0; 
    height: 16px; 
    width: 16px; 
    border-radius: 4px; 
    background: $white;
    border: 2px solid $base-dark-blue-primary;

  }

  /* On mouse-over, add a grey background color */
  .container:hover input ~ .checkmark {
    //background-color: #ccc;
  }

  /* When the checkbox is checked, add a blue background */
  .container input:checked ~ .checkmark {
    // .header-checkbox & {
    //   background-color: $base-light-blue;
    // }
     background-color: $base-dark-blue-primary;
      
  }


  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: ""; 
    position: absolute; 
    display: none;
  }

  /* Show the checkmark when checked */
  .container input:checked ~ .checkmark:after {
    display: block;

  }

  /* Style the checkmark/indicator */
  .container .checkmark:after {
    left: 4px; 
    top: 0px; 
    width: 5px; 
    height: 10px; 
    border: solid $white; 
    border-width: 0 2px 2px 0; 
    -webkit-transform: rotate(45deg); 
    -ms-transform: rotate(45deg); 
    transform: rotate(45deg);
  }
    color: $white;
  // End custom checkbox


}
 